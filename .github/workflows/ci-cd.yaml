name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # build-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'

  #     # Frontend build test
  #     - name: Install & Build Frontend
  #       working-directory: ./expensy_frontend
  #       run: |
  #         npm ci
  #         NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} npm run build

  #     # Backend build test
  #     - name: Install & Build Backend
  #       working-directory: ./expensy_backend
  #       run: |
  #         npm ci
  #         npm run build

  docker:
    #needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build & push frontend
      - name: Build & Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./expensy_frontend
          file: ./expensy_frontend/Dockerfile
          push: true
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          tags: docker.io/prouan/expensy-frontend:latest

      # Build & push backend
      - name: Build & Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./expensy_backend
          file: ./expensy_backend/Dockerfile
          push: true
          tags: docker.io/prouan/expensy-backend:latest

  deploy:
    #needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4


      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Apply Kubernetes Secrets
        run: |
          kubectl apply -f k8s/secrets.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/backend.yaml -n expensy
          kubectl apply -f k8s/frontend.yaml -n expensy
          # Update images to latest pushed versions
          kubectl -n expensy set image deployment/pablo-backend backend=docker.io/prouan/expensy-backend:latest
          kubectl -n expensy set image deployment/pablo-frontend frontend=docker.io/prouan/expensy-frontend:latest
